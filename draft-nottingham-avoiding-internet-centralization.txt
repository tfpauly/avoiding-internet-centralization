



Network Working Group                                      M. Nottingham
Internet-Draft                                               4 June 2022
Intended status: Informational                                          
Expires: 6 December 2022


                 Centralization and Internet Standards
        draft-nottingham-avoiding-internet-centralization-latest

Abstract

   Despite being designed and operated as a decentralized network-of-
   networks, the Internet is continuously subjected to forces that
   encourage centralization.

   This document offers a definition of centralization, explains why it
   is undesirable, identifies different types of centralization,
   catalogues limitations of common approaches to controlling it, and
   explores what Internet standards efforts can do to address it.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-nottingham-avoiding-internet-
   centralization/.

   Source for this draft and an issue tracker can be found at
   https://github.com/mnot/avoiding-internet-centralization.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 6 December 2022.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  What is Centralization?
   3.  When Centralization is Undesirable
   4.  Kinds of Centralization
     4.1.  Proprietary Centralization
     4.2.  Beneficial Centralization
     4.3.  Concentrated Centralization
     4.4.  Inherited Centralization
     4.5.  Platform Centralization
   5.  The Limits of Decentralization
     5.1.  Federation isn't Enough
     5.2.  Multi-Stakeholder Administration is Hard
     5.3.  Blockchains Are Not Magical
   6.  What Should Internet Standards Do?
     6.1.  Be Realistic
     6.2.  Decentralize Proprietary Functions
     6.3.  Evaluate New Decentralization Techniques
     6.4.  Build Robust Ecosystems
     6.5.  Limit Delegation of Power
     6.6.  Avoid Over-Extensibility
   7.  Security Considerations
   8.  Informative References
   Appendix A.  Acknowledgements
   Author's Address

1.  Introduction

   The Internet has succeeded in no small part because of its purposeful
   avoidance of any single controlling entity.  While this approach may
   reflect an initial desire to prevent a single technical failure from
   having a wide impact [RAND], it has also enabled the Internet's rapid
   adoption and broad spread.  Because internetworking does not require
   a network to get permission from or cede control to another entity,
   it accommodates a spectrum of requirements and is positioned as a
   public good.

   While avoiding centralization of control over the Internet remains a
   widely shared goal, achieving it consistently has proven difficult.
   Many successful protocols and applications on the Internet today
   operate in a centralized fashion -- to the point where some
   proprietary, centralized services have become so well-known that they
   are commonly mistaken for the Internet itself.  Even when protocols
   incorporate techniques intended to prevent centralization, economic
   and social factors can drive users to prefer centralized solutions
   built with or on top of supposedly decentralized technology.

   These difficulties call into question what role architectural
   regulation -- in particular, that in open standards bodies such as
   the IETF -- should play in preventing, mitigating, and controlling
   Internet centralization.

   This document discusses aspects of centralization that relate to
   Internet standards efforts, and argues that while the IETF may not be
   able to prevent centralization, there are still meaningful steps we
   can take to counteract it.

   Section 2 defines centralization.  Section 3 explains when and why
   centralization of the Internet's core functions is undesirable.
   Section 4 surveys the different kinds of centralization that might
   surface on the Internet.  Section 5 then catalogues high-level
   approaches to mitigating centralization and discusses their
   limitations.  Finally, Section 6 considers the role that Internet
   standards play in avoiding centralization and mitigating its effects.

   The primary audience for this document is the engineers who design
   and standardize Internet protocols.  However, designers of
   proprietary protocols can benefit from considering aspects of
   centralization, especially if they intend their protocol to be
   considered for eventual standardisation.  Likewise, policymakers can
   use this document to help identify and remedy inappropriately
   centralized protocols and applications.

2.  What is Centralization?

   This document defines "centralization" as the ability of a single
   entity or a small group of them to exclusively observe, capture,
   control, or extract rent from the operation or use of a Internet
   function.

   Here, "entity" could be a single person, a corporation, or a
   government.  It does not include an organisation that operates in a
   manner that effectively mitigates centralisation (see, e.g.,
   Section 5.2).

   "Internet function" is defined broadly.  It might be an enabling
   protocol already defined by standards, such as IP [RFC791], BGP
   [RFC4271], TCP [RFC793], or HTTP [HTTP].  It might also be a proposal
   for a new enabling protocol, or an extension to an existing one.

   However, the Internet's functions are not limited to standards-
   defined protocols.  User-visible applications built on top of
   standard protocols are also vulnerable to centralization -- for
   example, social networking, file sharing, financial services, and
   news dissemination.  Likewise, networking equipment, hardware,
   operating systems, and software act as enabling technologies that can
   exhibit centralization risk.  The supply of Internet connectivity
   itself can also be subject to the forces of centralization.

   Centralization risk is strongest when it affects the entire Internet.
   However, it can also be present when a substantial portion of the
   Internet's users lack options for a function.  For example, if there
   is only one provider for a function in a region or legal
   jurisdiction, that function is effectively centralized for those
   users.

   Likewise, if there is a single entity providing a function, it is
   obviously centralized.  However, centralization risk can also be
   present when there is friction against switching to a substitute,
   because external factors can more easily promote concentration (see
   Section 4.3).  For example, if switching requires a significant
   amount of time, resources, expertise, coordination, loss of
   functionality, or effort, centralization risk is indicated.

   Note that availability is related to but distinct from
   centralization.  For example, if my e-mail provider uses only one
   server, that server might go down and thus block my access to that
   function.  However, this alone is not a cause of centralization risk.

   "Decentralization" is the process of identifying centralization risk
   related to a function, followed by the application of techniques used
   to prevent or mitigate that risk.

   Decentralization does not require that provision of a function need
   be so widely distributed that other important factors are sacrificed.
   Because centralization can have beneficial effects (see Section 4.1),
   the techniques used to decentralize a given function might vary, with
   the optimal balance being determined by many factors.  Notably, a
   function that is only available through a small number of providers
   can still be decentralized (see, for example, the Domain Name System
   [RFC1035]).

   Therefore, discussions of centralization and architectural efforts at
   decentralization need to be made on a case-by-base basis, depending
   on the function in question, surrounding circumstances, and the
   availability and effectiveness of other regulatory mechanisms.

   Note that it is important to distinguish centralization from anti-
   competitive concerns (also known as "anti-trust").  While there are
   many interactions between these concepts and making provision of the
   Internet's functions more competitive may be a motivation for
   avoiding centralization, only courts are authoritative in defining a
   relevant market and determining whether behaviour is anti-
   competitive.

3.  When Centralization is Undesirable

   Centralization is not always problematic, and is sometimes even
   desirable.  If a function is specific to a given entity -- for
   example, a person's web site, or a government service -- it is
   expected that it be controlled by them alone.  Emerging applications
   are often less complex and more efficient to deploy as proprietary
   rather than decentralized functions.  Some functions (such as the
   Internet standards process itself) even require central control to
   assure interoperability and application of shared goals and
   architectural principles.

   However, when any function becomes widespread enough in use and
   especially when it becomes a platform for other functions to be built
   upon, it deserves more scrutiny for undesirable centralization.
   Centralization of these functions is problematic when there are not
   effective mitigations in place (see Section 5), for a variety of
   reasons.

   First, the Internet's very nature is incompatible with centralization
   of its functions.  As a "large, heterogeneous collection of
   interconnected systems" [BCP95] the Internet is often characterised
   as a "network of networks".  These networks relate as peers who agree
   to facilitate communication, rather than having a relationship of
   subservience to others' requirements or coercion by them.  This focus
   on independence of action carries through the way the network is
   architected -- for example, in the concept of an "autonomous system".

   Second, when a third party has unavoidable access to communications,
   the informational and positional advantages gained can be used to
   observe behavior (the "panopticon effect") and shape or even deny
   behaviour (the "chokepoint effect") [INTERMEDIARY-INFLUENCE] -- which
   can be used by those parties (or the states that have authority over
   them) for coercive ends [WEAPONIZED-INTERDEPENDENCE] or to disrupt
   society itself.  Just as good governance of states requires
   separation of powers [FEDERALIST-51], so too does good governance of
   the Internet require that power not be concentrated in one place.

   Finally, centralization of a function can have deleterious effects on
   the Internet itself, including:

   *  _Limiting Innovation_: Centralization can preclude the possibility
      of "permissionless innovation" -- the ability to deploy new,
      unforeseen applications without requiring coordination with
      parties other than those you are communicating with.

   *  _Constraining Competition_: The Internet and its users benefit
      from robust competition when applications and services are
      available from many providers -- especially when those users can
      build their own applications and services based upon interoperable
      standards.  When a centralized service or platform must be used
      because no substitutes are suitable, it effectively becomes an
      essential facility, which encourages abuse of power.

   *  _Reducing Availability_: Availability of the Internet (and
      applications and services built upon it) improves when there are
      many ways to obtain access.  While centralized services'
      availability can benefit from the focused attention that their
      elevated role requires, centralization means that failure of a
      single large provider can have a disproportionate impact on
      availability.

   *  _Creating Monoculture_: The scale available to a centralized
      service or application can magnify minor flaws in features such as
      recommendation algorithms to a degree that can have broad (even
      societal) consequences.  Diversity in these functions'
      implementation leads to a more robust outcome when viewed
      systemically.  [POLYCENTRIC]

   *  _Self-Reinforcement_: As widely noted (see, e.g., [ACCESS]), a
      centralized service's access to data allows it the opportunity to
      make improvements to its offerings, while denying such access to
      others.

   See also [TECH-SUCCESS-FACTORS] for further exploration of how
   centralization can affect the Internet.

   To summarize, centralization of a function allows it to be captured,
   becoming a "walled garden" that cannot be a full part of the Internet
   because it does not meet the Internet's architectural design goals or
   users' expectations.

4.  Kinds of Centralization

   Centralization on the Internet is not uniform; it presents in a
   variety of ways, depending on its relationship to the function in
   question and underlying causes.  The subsections below describe
   different aspects of Internet centralization.

4.1.  Proprietary Centralization

   Creating of a protocol or application with a fixed role for a
   specific party is the most straightforward kind of centralization.
   Currently, many messaging, videoconferencing, chat, and similar
   protocols operate in this fashion.

   While some argue that such protocols are simpler to design, more
   amenable to evolution, and more likely to meet user needs [MOXIE],
   proprietary centralization most often reflects commercial goals -- in
   particular, a strong desire to capture the protocols' financial
   benefits by "locking in" users to a proprietary service.

   Proprietary protocols and applications are not considered to be part
   of the Internet per se; instead, they are more properly characterized
   as being built on top of the Internet.  As such, the Internet
   architecture and associated standards do not regulate them, beyond
   the constraints that the underlying protocols (e.g., TCP, IP, HTTP)
   impose.

4.2.  Beneficial Centralization

   Some protocols introduce centralization risk that is unavoidable,
   because the protocol's goals require a centralized function.

   For example, when there is a need for a single, globally coordinated
   "source of truth", that function is by nature centralized -- such as
   in the Domain Name System (DNS), which allows human-friendly naming
   to be converted into network addresses in a globally consistent
   fashion.

   IP addresses allocation is another example of a function having this
   kind of centralization risk.  Internet routing requires addresses to
   be allocated uniquely, but if a single government or company captured
   the addressing function, the entire Internet would be at risk of
   abuse by that entity.

   Similarly, the need for coordination in the Web's trust model brings
   centralization risk, because of the Certificate Authority's role in
   communication between clients and servers.

   Protocols that need to solve the "rendezvous problem" to coordinate
   communication between two parties who are not in direct contact also
   suffer from this kind of centralization risk.  For example, chat
   protocols need to coordinate communication between two parties that
   wish to talk; while the actual communication can be direct between
   them (so long as the protocol facilitates that), the endpoints'
   mutual discovery typically requires a third party.

   By nature, what is or is not "beneficial" is a judgment call.  Some
   protocols cannot function without a centralized function; others
   might be significantly enhanced for certain use cases if a function
   is centralized, or might merely be more efficient.  Such judgments
   should be made in light of established architectural principles and
   how benefits accrue to end users.

   When beneficial centralization is present, internet protocols often
   attempt to mitigate the associated risks using measures such as
   federation (see Section 5.1) and multi-stakeholder administration
   (see Section 5.2).  Protocols that successfully mitigate beneficial
   centralization are often reused, to avoid the considerable cost and
   risk of re-implementing those mitigations.  For example, if a
   protocol requires a coordinated, global naming function, reusing the
   Domain Name System is usually preferable to establishing a new
   system.

4.3.  Concentrated Centralization

   Even when a function avoids proprietary centralization and any
   beneficial centralization risk has been mitigated, it might become
   centralized in practice when external factors influence its
   deployment, so that few or even just one entity provides the
   function.  This is often referred to as "concentration."  Economic,
   legal, and social factors that encourage use of a central function
   despite the absence of such a requirement in the protocol itself can
   cause concentration.

   Often, the factors driving concentration are related to the network
   effects that are so often seen on the Internet.  While in theory
   every node on the Internet is equal, in practice some nodes are much
   more connected than others: for example, just a few sites drive much
   of the traffic on the Web. While expected and observed in many kinds
   of networks,[SCALE-FREE] network effects award asymmetric power to
   nodes that act as intermediaries to communication.

   Left unchecked, these factors can cause a potentially decentralized
   application to become effectively controlled by one party, because
   the central function has leverage to "lock in" users.  For example,
   social networking is an application that is currently supplied by a
   few proprietary platforms despite standardization efforts (see, e.g.,
   [ACTIVITYSTREAMS]), because of the powerful network effects
   associated.

   By its nature, concentration is difficult to avoid in protocol
   design, and federated protocols are particularly vulnerable to it
   (see Section 5.1).

4.4.  Inherited Centralization

   Most Internet protocols and applications depend on other, "lower-
   layer" protocols and their implementations.  The features,
   deployment, and operation of these dependencies can surface
   centralization risk into functions and applications built "on top" of
   them.

   For example, the network between endpoints can introduce
   centralization risk to application-layer protocols, because it is
   necessary for communication and therefore has power over it.  A
   network might block access to, slow down, or change the content of
   various application protocols or specific services for financial,
   political, operational, or criminal reasons, thereby creating
   pressure to use other services, which can result in centralization of
   them.

   Likewise, having only a single implementation of a protocol is an
   inherited centralization risk, because applications that use it are
   vulnerable to the control it has over their operation.  Even if it is
   Open Source, there might be inherited centralization risk if there
   are factors that make forking difficult (for example, the cost of
   maintaining that fork).

   Inherited centralization risk is often present when users cannot find
   a substitute because network effects reduce the choices available to
   them.  This kind of centralization can also be created by legal
   mandates and incentives that restrict the options for Internet
   access, the provision of a given function, or the range of
   implementations available.

   Some kinds of inherited centralization can be prevented by enforcing
   layer boundaries through use of techniques like encryption.  When the
   number of parties who have access to content of communication are
   limited, parties at lower layers can be prevented from interfering
   with and observing it.  Although those lower-layer parties might
   still be able to prevent communication, encryption also makes it more
   difficult to discriminate a target from other traffic.

   Note that the prohibitive effect of encryption on inherited
   centralization is most pronounced when most (if not all) traffic is
   encrypted.  See also [RFC7258].

4.5.  Platform Centralization

   The complement to inherited centralization is platform centralization
   -- where a function does not directly define a central role, but
   could facilitate centralization in the applications it supports.

   For example, HTTP [HTTP] is not considered a centralized protocol;
   interoperable servers are easy to instantiate, and multiple clients
   are available.  It can be used without central coordination beyond
   that provided by DNS, as discussed above.

   However, applications built on top of HTTP (as well as the rest of
   the "Web Platform") often exhibit centralization.  As such, HTTP is
   an example of a platform for centralization -- while the protocol
   itself is not centralized, it facilitates the creation of centralized
   services and applications.

   Like concentration, platform centralization is difficult to prevent
   with protocol design.  Because of the layered nature of the Internet,
   most protocols allow considerable flexibility in how they are used,
   often in a way that it becomes attractive to form a dependency on one
   party's operation.

5.  The Limits of Decentralization

   Centralization's relationship to Internet standardization is
   undeniably about power -- a protocol is an agreed-to set of rules and
   conventions, and those rules can impact how power accrues.  Over
   time, various techniques have been developed that attempt to avoid
   concentration of power as a result of protocol design, or to bring
   accountability when it is unavoidable.

   While use of these techniques can result in a function which is less
   centralized or less amenable to some kinds of centralization, they
   are not adequate to avoid centralization completely.  They are also
   not indicators of whether a protocol is centralized without further
   analysis.

5.1.  Federation isn't Enough

   A widely known technique for managing centralization in Internet
   protocols is federation -- designing them in such a way that new
   instances of any centralized function are easy to create and can
   maintain interoperability and connectivity with other instances.

   For example, SMTP [RFC5321] is the basis of the e-mail suite of
   protocols, which has two functions that have centralization risk:

   1.  Giving each user a globally unique address, and

   2.  Routing messages to the user, even when they change network
       locations or are disconnected for long periods of time.

   E-mail reuses DNS to help mitigate the first risk.  To mitigate the
   second, it defines a specific role for routing users' messages, the
   Message Transfer Agent (MTA).  By allowing anyone to deploy an MTA
   and defining rules for interconnecting them, the protocol's users
   avoid a requirement for a single central router.

   Users can (and often do) choose to delegate that role to someone
   else, or run their own MTA.  However, running your own mail server
   has become difficult, because of the likelihood of a small MTA being
   classified as a spam source.  Because large MTA operators are widely
   known and have greater impact if their operation is affected, they
   are less likely to be classified as such, concentrating the
   protocol's operation (see Section 4.3).

   Another example of a federated Internet protocol is XMPP [RFC6120],
   supporting "instant messaging" and similar functionality.  Like
   e-mail, it reuses DNS for naming and requires federation to
   facilitate rendezvous of users from different systems.

   While some deployments of XMPP do support truly federated messaging
   (i.e., a person using service A can interoperably chat with someone
   using service B), many of the largest do not.  Because federation is
   voluntary, some operators captured their users into a single service,
   denying them the benefits of global interoperability.

   The examples above illustrate that while federation can be a useful
   technique to avoid proprietary centralization and manage beneficial
   centralization, it does not prevent concentration or platform
   centralization.  If a single entity can capture the value provided by
   a protocol, they may use the protocol as a platform to get a "winner
   take all" outcome -- a significant risk with many Internet protocols,
   since network effects often promote such outcomes.  Likewise,
   external factors (such as spam control) might naturally "tilt the
   table" towards a few operators.

5.2.  Multi-Stakeholder Administration is Hard

   The risks associated with a beneficial centralized function (see
   Section 4.2) are sometimes mitigated by delegating that function's
   administration to a multi-stakeholder body -- an institution that
   includes representatives of the different kinds of parties that are
   affected by the system's operation ("stakeholders") in an attempt to
   make well-reasoned, legitimate, and authoritative decisions.

   The most widely-studied example of this technique is the
   administration of the DNS, which as a "single source of truth"
   exhibits beneficial centralization in its naming function, as well as
   the operation of the system overall.  To mitigate operational
   centralization, multiple root servers that are administered by
   separate operators (themselves diverse in geography) and a selection
   of corporate entities, non-profits, and government bodies from many
   jurisdictions and affiliations carry this task out.  Administration
   of the name space itself is overseen by the Internet Corporation for
   Assigned Names and Numbers (ICANN)
   (https://www.icann.org/resources/pages/governance/governance-en), a
   global multi-stakeholder body with representation from end users,
   governments, operators, and others.

   Another example is the administration of the Web's trust model,
   implemented by Web browsers as relying parties and Certificate
   Authorities as trust anchors.  To assure that all parties meet the
   operational and security requirements necessary to provide the
   desired properties, the CA/Browser Forum (https://cabforum.org) was
   established as an oversight body that involves both of those parties
   as stakeholders.

   Yet another example of multi-stakeholderism is the standardization of
   Internet protocols themselves.  Because a specification controls
   implementation behavior, the standardization process can be seen as a
   single point of control.  As a result, Internet standards bodies like
   the IETF allow open participation and contribution, make decisions in
   an open and accountable way, have a well-defined process for making
   (and when necessary, appealing) decisions, considering the views of
   different stakeholder groups [RFC8890].

   A major downside of this approach is that setup and ongoing operation
   of multi-stakeholder bodies is not trivial.  Additionally, their
   legitimacy cannot be assumed, and may be difficult to establish and
   maintain (see, e.g., [LEGITIMACY-MULTI]).  This concern is especially
   relevant if the function being coordinated is broad, complex, and/or
   contentious.

5.3.  Blockchains Are Not Magical

   Increasingly, distributed consensus technologies (such as blockchain)
   are touted as a solution to centralization issues.  A complete survey
   of this rapidly changing area is beyond the scope of this document,
   but we can generalise about their properties.

   These techniques attempt to avoid centralization risk by distributing
   functions to members of a sometimes large pool of protocol
   participants.  Proper performance of a function is typically
   guaranteed using cryptographic techniques (often, an append-only
   transaction ledger).  A particular task's assignment to a node for
   handling usually cannot be predicted or controlled.

   Sybil attacks (where a party or coordinated parties cheaply create
   enough protocol participants to affect how consensus is judged) are a
   major concern for these protocols.  Diversity in the pool of
   participants is encouraged using indirect techniques such as proof-
   of-work (where each participant has to demonstrate significant
   consumption of resources) or proof-of-stake (where each participant
   has some other incentive to execute correctly).

   Use of these techniques can create barriers to proprietary and
   inherited centralization.  However, depending upon the application in
   question, both concentration and platform centralization are still
   possible.

   Furthermore, distributed consensus technologies have several
   potential shortcomings that may make them inappropriate -- or at
   least difficult to use -- for many Internet applications, because
   their use conflicts with other important goals:

   1.  Distributed consensus has significant implications for privacy.
       Because activity (such as queries or transactions) are shared
       with many unknown parties (and often publicly visible due to the
       nature of the blockchain) they have very different privacy
       properties than traditional client/server protocols.  Potential
       mitigations (e.g., Private Information Retrieval; see, e.g.,
       [PIR]) are still not suitable for broad deployment.

   2.  Their complexity and "chattiness" typically result in
       significantly less efficient use of the network (often, to
       several orders of magnitude).  When distributed consensus
       protocols use proof-of-work, energy consumption can become
       significant (to the point where some jurisdictions have banned
       its use).

   3.  Distributed consensus protocols are still not proven to scale to
       the degree expected of successful Internet protocols.  In
       particular, relying on unknown third parties to deliver
       functionality can introduce significant variability in latency,
       availability, and throughput.  This is a marked change for
       applications with high expectations for these properties (e.g.,
       consumer-oriented Web sites).

   4.  By design, distributed consensus protocols diffuse responsibility
       for a function among several difficult-to-identify parties.
       While this may be an effective way to prevent some kinds of
       centralization, it also means that making someone accountable for
       how the function is performed difficult, and often impossible.
       While the protocol might use cryptographic techniques to assure
       correct operation, they may not capture all requirements, and may
       not be correctly used by the protocol designers.

   5.  Distributed consensus protocols typically rely on cryptography
       for identity, rather than trusting a third party's assertions
       about identity.  When a participant loses their keys, the process
       of recovering their identity exposes additional centralization
       risk.

   It is also important to recognise that a protocol or an application
   can use distributed consensus for some functions, but still have
   centralization risk elsewhere -- either because those functions
   cannot be decentralized (most commonly, rendezvous and global naming;
   see Section 4.2) or because the designer has chosen not to because of
   the associated costs and lost opportunities.

   Even when distributed consensus is used for all technical functions
   of a service, some coordination is still necessary -- whether that be
   through governance of the function itself, creation of shared
   implementations, or documentation of shared wire protocols.  That
   represents centralization risk, just at a different layer (inherited
   or platform).

   These potential shortcomings do not rule out the use of distributed
   consensus technologies in every instance.  They do, however, caution
   against uncritically relying upon these technologies to avoid
   centralization.

6.  What Should Internet Standards Do?

   Centralization is driven by powerful forces -- both economic and
   social -- as well as the network effects that come with Internet
   scale.  Because permissionless innovation is a core value for the
   Internet, and yet much of the centralization seen on the Internet is
   performed by proprietary platforms that take advantage of this
   nature, the controls available to standards efforts are very limited.

   While standards bodies on their own cannot prevent centralization,
   there are meaningful steps that can be taken to prevent some
   functions from exhibiting centralization.  There are also valuable
   contributions that standards efforts can make to other relevant forms
   of regulation.

6.1.  Be Realistic

   Some kinds of centralization risk are easy to manage in standards
   efforts.  For example, if a proprietary protocol were to be proposed
   to the IETF, it would be rejected out of hand.  There is a growing
   body of knowledge and experience with beneficial centralization, and
   a strong inclination to reuse existing infrastructure where possible.
   As discussed above, encryption is often a way to manage inherited
   centralization, and has become the norm in standard protocols.  These
   responses are appropriate ways for Internet standards to manage
   centralization risk.

   However, preventing concentration and platform centralization is much
   more difficult in standards efforts.  Because we have no "protocol
   police", it's not possible to demand that someone stop building a
   proprietary service using a purportedly federated protocol.  We also
   cannot stop someone from building centralized services "on top" of
   standard protocols without abandoning architectural goals like
   permissionless innovation.

   Therefore, committing significant resources to scrutinizing protocols
   for latent centralization risk -- especially for concentration and
   platform risks -- is unlikely to be effective in preventing Internet
   centralization.  Almost all existing Internet protocols -- including
   IP, TCP, HTTP, and DNS -- suffer some form of concentration or
   platform centralization.  Refusing to standardize a newer protocol
   because it faces similar risks would not be equitable, proportionate,
   or effective.

   When we do find centralization risk, we should consider its
   relationship with other architectural goals as we consider how to
   address it.  In particular, attention should be paid to how effective
   standards (as a form of architectural regulation) is in achieving
   each goal.

   For example, privacy is often more effectively ensured by ex ante
   technical constraints, as compared to ex post legal regulation.
   Conversely (as discussed) some kinds of centralization are likely
   better addressed through legal regulation.  Thus, as a first order
   concern, a standards effort balancing these concerns might focus
   primarily on privacy.  However it is often the case that these are
   not completely separable goals -- concentration can result in one or
   a few entities having greater volume and variety of data available
   exclusively to them, raising significant privacy and security
   concerns.

6.2.  Decentralize Proprietary Functions

   It is worthwhile to create specifications for functions that are
   currently only satisfied by proprietary providers.  By building open
   specifications on top of already established standards, an
   alternative to a centralized function can be created.

   A common objection to such efforts is that adoption is voluntary, not
   mandatory; there are no "standards police" to mandate their use or
   enforce correct implementation.  For example, specifications like
   [ACTIVITYSTREAMS]) have been available for some time without broad
   adoption by social networking providers.

   However, while standards aren't mandatory, legal regulation is, and
   regulators around the globe are now focusing their efforts on the
   Internet.  In particular, legal mandates for interoperability are
   increasingly discussed as a remedy for competition issues (see, e.g.,
   [OECD]).

   As such, emerging regulation presents an opportunity to create new
   specifications to decentralize these functions, backed by a legal
   mandate in combination with changing norms and the resulting market
   forces [NEW-CHICAGO].

   Successfully creating standards that work in concert with legal
   regulation is new ground for the IETF, presents many potential
   pitfalls, and will require new capabilities (especially liaison,
   likely originating in the IAB) and considerable effort.  If the
   Internet community does not make that effort, it is likely that
   regulators' needs will be filled by other means -- most likely, with
   less transparency, more narrow input, limited experience, and without
   reference to the Internet's architectural goals.

6.3.  Evaluate New Decentralization Techniques

   The decentralization techniques listed in Section 5 are not a closed
   set; wide interest has spurred development of new approaches, both in
   general and as solutions to specific problems.

   For example, Secure multi-party computation techniques like
   [FAIRPLAYMP] can enable "a set of untrusting parties to compute any
   function of their private inputs while revealing nothing but the
   result of the function."

   Standards bodies (including the IETF) can serve an important function
   by evaluating how suitable such proposals are for deployment on the
   Internet, in reference to privacy, security, operational, and other
   shared goals.  When appropriate, publication on the standards track
   or as experimental can be used to send signals to implementers,
   users, and regulators about their fitness.

6.4.  Build Robust Ecosystems

   To minimize inherited centralization risk, standards-defined
   functions should have an explicit goal of broad, diverse
   implementation and deployment so that users have as many choices as
   possible.

   Section 2.1 of [RFC5218] explores some factors in protocol design
   that encourage this outcome.

   This goal can also be furthered by ensuring that the cost of
   switching to a different implementation or deployment is as low as
   possible to facilitate subsequent substitution.  This implies that
   the standard is functionally complete and specified precisely enough
   to result in meaningful interoperability.

   The goals of completeness and diversity are sometimes in tension.  If
   a standard is extremely complex, it may discourage implementation
   diversity because the cost of a complete implementation is too high
   (consider: Web browsers).  On the other hand, if the specification is
   too simple, it may not offer enough functionality to be complete, and
   the resulting proprietary extensions may make switching difficult
   (see Section 6.6).

   Also worthy of attention are the underlying incentives for
   implementation.  While a completely commoditized protocol might not
   allow implementations to differentiate themselves, they do provide
   opportunties for specialization and improvement elsewhere in the
   value chain [ATTRACTIVE-PROFITS].  Well-timed standards efforts
   leverage these forces to focus proprietary interests on top of open
   technology, rather than as a replacement for it.

   Balancing these factors to build robust ecosystems is difficult, but
   is often helped by community building and good design -- in
   particular, appropriate use of layering.  It also requires continuing
   maintenance and evolution of protocols, to assure that they are still
   relevant and appropriate to their use.

6.5.  Limit Delegation of Power

   Some functions might see substantial benefits if they are performed
   by a third party in communication.  When used well, adding a new
   party to communication can improve:

   *  _Efficiency_: Many functions on the Internet are more efficient
      when performed at a higher scale.  For example, a Content Delivery
      Network can offer services at a fraction of the financial and
      environmental cost that would otherwise be paid by someone serving
      content themselves, because of the scale they operate at.

   *  _Simplicity_: Completely disintermediating communication can shift
      the burden of functions onto endpoints.  This can cause increased
      cognitive load for users; for example, compare commercial social
      networking platforms with self-hosted efforts.

   *  _Specialization_: Having a function concentrated into few hands
      can improve outcomes because of the resulting specialization.  For
      example, services overseen by professional administrators are
      often seen to have a better security posture and improved
      availability.

   *  _Privacy_: For some functions, user privacy can be improved by
      concentrating their activity to prevent individual behaviors from
      being discriminated from each other.[MIX] Introduction of a third
      party can also enforce functional boundaries -- for example, to
      reduce the need for users to trust potentially malicious
      endpoints, as seen in the so-called "oblivious" protocols (e.g.,
      [I-D.pauly-dprive-oblivious-doh]) that allow end users to hide
      their identity from services, while still accessing them.

   However, introducing an new party to communication adds concentration
   and platform centralization risk to Internet protocols, because it
   brings opportunities for control and observation.  While (as
   discussed above) standards efforts have a very limited capability to
   prevent or control these types of centralization, designing protocols
   with constraints on third party functions can prevent at least the
   most egregious outcomes.

   Most often, third parties are added to protocols as "intermediaries"
   or in designated "agent" roles.  In general, they should only be
   interposed as a result of the positive action of at least one
   endpoint, and should have their ability to observe or control
   communication limited to what is necessary to perform their intended
   function.

   For example, early deployments of HTTP allowed intermediaries to be
   interposed by the network without knowledge of the endpoints, and
   those intermediaries could see and change the full content of traffic
   by default -- even when they are only intended to perform basic
   functions such as caching.  Because of the introduction of HTTPS and
   the CONNECT method (see Section 9.3.6 of [HTTP]), combined with
   efforts to encourage its adoption, those intermediaries are now
   required to be explicitly interposed by one endpoint.

   See [I-D.thomson-tmi] for more guidance on protocol intermediation.

   The term "intermediary" is also used (often in legal and regulatory
   contexts) more broadly than it has been in protocol design; for
   example, an auction Web site intermediates between buyers and sellers
   is considered an intermediary, even though it is not formally an
   intermediary in HTTP (see Section 3.7 of [HTTP]).  Protocol designers
   can address the centralization risk associated with this kind of
   intermediation by standardising the function, rather than restricting
   the capabilities of the underlying protocols; see Section 6.2.

6.6.  Avoid Over-Extensibility

   An important feature of Internet protocols is their ability to
   evolve, so that they can meet new requirements and adapt to new
   conditions without requiring a "flag day" to upgrade implementations.
   Typically, protocols accommodate evolution through extension
   mechanisms, which allow optional features to be added over time in an
   interoperable fashion.

   Extensibility can be viewed as a mechanism for decentralization as
   well -- by allowing uncoordinated evolution, it promotes autonomy and
   adaption of a function for local needs.  However, protocol extensions
   can also increase the risk of platform centralization if a powerful
   entity can change the target for meaningful interoperability by
   adding proprietary extensions to a standard protocol.  This is
   especially true when the core standard does not itself provide
   sufficient utility on its own.

   For example, the SOAP protocol's [SOAP] extreme flexibility and
   failure to provide significant standalone value allowed vendors to
   require use of their preferred extensions, favouring those who had
   more market power.

   Therefore, standards efforts should focus on providing concrete
   utility to the majority of their users as published, rather than
   being a "framework" where interoperability is not immediately
   available.  Internet protocols should not make every aspect of their
   operation extensible; extension points should be reasoned,
   appropriate boundaries for flexibility and control.  When a protocol
   defines extension points, they should not allow an extension to
   declare itself to be mandatory-to-interoperate, as that pattern
   invites abuse.

   Where extensions are allowed, attention should be paid to those that
   emerge; where appropriate, widely adopted extensions should be put
   through a standards process to assure that the result adheres to
   architectural principles and shared goals (see also Section 6.2).

7.  Security Considerations

   This document does not have direct security impact on Internet
   protocols.  However, failure to consider centralization risks might
   cause a myriad of security issues.

8.  Informative References

   [ACCESS]   Vestager, M., "Defending Competition in a Digitised World,
              Address at the European Consumer and Competition Day",
              April 2019, <https://wayback.archive-
              it.org/12090/20191129202059/https://ec.europa.eu/
              commission/commissioners/2014-2019/vestager/announcements/
              defending-competition-digitised-world_en>.

   [ACTIVITYSTREAMS]
              Snell, J. and E. Prodromou, "Activity Streams 2.0", World
              Wide Web Consortium CR CR-activitystreams-core-20161215,
              15 December 2016, <https://www.w3.org/TR/2016/CR-
              activitystreams-core-20161215>.

   [ATTRACTIVE-PROFITS]
              Christensen, C., "The Law of Conservation of Attractive
              Profits", Harvard Business Review, "Breakthrough Ideas for
              2004", February 2004.

   [BCP95]    Alvestrand, H., "A Mission Statement for the IETF",
              BCP 95, RFC 3935, October 2004.

              <https://www.rfc-editor.org/info/bcp95>

   [FAIRPLAYMP]
              Ben-David, A., Nisan, N., and B. Pinkas, "FairplayMP - "A
              System for Secure Multi-Party Computation"", CCS'08,
              October 2008.

   [FEDERALIST-51]
              Madison, J., "The Structure of the Government Must Furnish
              the Proper Checks and Balances Between the Different
              Departments", The Federalist Papers, No. 51, February
              1788.

   [HTTP]     Fielding, R. T., Nottingham, M., and J. Reschke, "HTTP
              Semantics", Work in Progress, Internet-Draft, draft-ietf-
              httpbis-semantics-19, 12 September 2021,
              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
              semantics-19>.

   [I-D.pauly-dprive-oblivious-doh]
              Kinnear, E., McManus, P., Pauly, T., Verma, T., and C. A.
              Wood, "Oblivious DNS Over HTTPS", Work in Progress,
              Internet-Draft, draft-pauly-dprive-oblivious-doh-11, 17
              February 2022, <https://datatracker.ietf.org/doc/html/
              draft-pauly-dprive-oblivious-doh-11>.

   [I-D.thomson-tmi]
              Thomson, M., "Principles for the Involvement of
              Intermediaries in Internet Protocols", Work in Progress,
              Internet-Draft, draft-thomson-tmi-03, 7 March 2022,
              <https://datatracker.ietf.org/doc/html/draft-thomson-tmi-
              03>.

   [INTERMEDIARY-INFLUENCE]
              Judge, K., "Intermediary Influence", 2014,
              <https://scholarship.law.columbia.edu/
              faculty_scholarship/1856>.

   [LEGITIMACY-MULTI]
              Palladino, N. and N. Santaniello, "Legitimacy, Power, and
              Inequalities in the Multistakeholder Internet Governance",
              2020.

   [MIX]      Chaum, D. L., "Untraceable Electronic Mail, Return
              Addresses, and Digital Pseudonyms", February 1981,
              <https://dl.acm.org/doi/10.1145/358549.358563>.

   [MOXIE]    Marlinspike, M., "Reflections: The ecosystem is moving",
              May 2016,
              <https://signal.org/blog/the-ecosystem-is-moving/>.

   [NEW-CHICAGO]
              Lessig, L., "The New Chicago School", June 1998.

   [OECD]     OECD, "Data portability, interoperability and digital
              platform competition", June 2021,
              <https://www.oecd.org/daf/competition/data-portability-
              interoperability-and-digital-platform-competition-
              2021.pdf>.

   [PIR]      Olumofin, F. and I. Goldberg, "Revisiting the
              Computational Practicality of Private Information
              Retrieval", 2010.

   [POLYCENTRIC]
              Aligia, P. D. and V. Tarko, "Polycentricity: From Polanyi
              to Ostrom, and Beyond", April 2012.

   [RAND]     Baran, P., "On Distributed Communications: Introduction to
              Distributed Communications Networks", 1964,
              <https://www.rand.org/pubs/research_memoranda/
              RM3420.html>.

   [RFC1035]  Mockapetris, P., "Domain names - implementation and
              specification", STD 13, RFC 1035, DOI 10.17487/RFC1035,
              November 1987, <https://www.rfc-editor.org/rfc/rfc1035>.

   [RFC4271]  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., "A
              Border Gateway Protocol 4 (BGP-4)", RFC 4271,
              DOI 10.17487/RFC4271, January 2006,
              <https://www.rfc-editor.org/rfc/rfc4271>.

   [RFC5218]  Thaler, D. and B. Aboba, "What Makes for a Successful
              Protocol?", RFC 5218, DOI 10.17487/RFC5218, July 2008,
              <https://www.rfc-editor.org/rfc/rfc5218>.

   [RFC5321]  Klensin, J., "Simple Mail Transfer Protocol", RFC 5321,
              DOI 10.17487/RFC5321, October 2008,
              <https://www.rfc-editor.org/rfc/rfc5321>.

   [RFC6120]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", RFC 6120, DOI 10.17487/RFC6120,
              March 2011, <https://www.rfc-editor.org/rfc/rfc6120>.

   [RFC7258]  Farrell, S. and H. Tschofenig, "Pervasive Monitoring Is an
              Attack", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May
              2014, <https://www.rfc-editor.org/rfc/rfc7258>.

   [RFC791]   Postel, J., "Internet Protocol", STD 5, RFC 791,
              DOI 10.17487/RFC0791, September 1981,
              <https://www.rfc-editor.org/rfc/rfc791>.

   [RFC793]   Postel, J., "Transmission Control Protocol", STD 7,
              RFC 793, DOI 10.17487/RFC0793, September 1981,
              <https://www.rfc-editor.org/rfc/rfc793>.

   [RFC8890]  Nottingham, M., "The Internet is for End Users", RFC 8890,
              DOI 10.17487/RFC8890, August 2020,
              <https://www.rfc-editor.org/rfc/rfc8890>.

   [SCALE-FREE]
              Albert, R., "Emergence of Scaling in Random Networks",
              October 1999, <https://barabasi.com/f/67.pdf>.

   [SOAP]     Mitra, N. and Y. Lafon, "SOAP Version 1.2 Part 0: Primer
              (Second Edition)", World Wide Web Consortium
              Recommendation REC-soap12-part0-20070427, 27 April 2007,
              <https://www.w3.org/TR/2007/REC-soap12-part0-20070427>.

   [TECH-SUCCESS-FACTORS]
              Kende, M., Kvalbein, A., Allford, J., and D. Abecassis,
              "Study on the Internet's Technical Success Factors",
              December 2021, <https://blog.apnic.net/wp-
              content/uploads/2021/12/MKGRA669-Report-for-APNIC-LACNIC-
              V3.pdf>.

   [WEAPONIZED-INTERDEPENDENCE]
              Farrell, H. and A. L. Newman, "Weaponized Interdependence:
              How Global Economic Networks Shape State Coercion", 2019,
              <https://doi.org/10.1162/ISEC_a_00351>.

Appendix A.  Acknowledgements

   This document benefits from discussions with Brian Trammell during
   our shared time on the Internet Architecture Board.

   Thanks to Jari Arkko, Christian Huitema, and Eliot Lear for their
   comments and suggestions.

Author's Address

   Mark Nottingham
   Prahran
   Australia
   Email: mnot@mnot.net
   URI:   https://www.mnot.net/
